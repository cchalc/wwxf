name: wwxf setup

on:
  workflow_dispatch:
    branches:
      - '**'
    tags-ignore:
      - 'v*' # this tag type is used for release pipelines

jobs:
  setup:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install pip and databricks-cli
        run: |
          python -m pip install --upgrade pip
          pip install -U databricks-cli

      - name: Prepare profile
        run: |
          echo "[DEFAULT]" >> ~/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

      - 
        name: set up init script
        run: |
          databricks fs mkdirs dbfs:/databricks/scripts
          databricks fs cp --overwrite ./conf/scripts/pyrasterframes_init.sh dbfs:/databricks/scripts/pyrasterframes_init.sh --profile DEFAULT
          databricks fs mkdirs dbfs:/databricks/libraries
          databricks fs cp --overwrite ./conf/libraries/e74ff108_09c9_4774_9dde_8247e32b8234-pyrasterframes_assembly_0_10_1_dbr7_3-8c59b.jar dbfs:/databricks/libraries/pyrasterframes-assembly-0.10.1-dbr7.3.jar --profile DEFAULT
          databricks fs cp --overwrite ./conf/libraries/pyrasterframes-0.10.1.dev0+dbr7.3-py3-none-any.whl dbfs:/databricks/libraries/pyrasterframes-0.10.1.dev0+dbr7.3-py3-none-any.whl --profile DEFAULT

      - 
        name: create cluster
        run: |
          databricks clusters create --json-file ./conf/clusters/development.json

  install:
    needs: setup

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install pip and databricks-cli
        run: |
          python -m pip install --upgrade pip
          pip install -U databricks-cli

      - name: Prepare profile
        run: |
          echo "[DEFAULT]" >> ~/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

      - 
        name: wait for cluster to be in running state
        run: |
          sleep 240
      - 
        name: install libraries
        run: |
          CLUSTER_ID=`databricks clusters list --output JSON | jq -r '( .clusters[] | select(.default_tags.ClusterName=="wwxf-rasterframes") .cluster_id )'`
          sed "s/CLUSTER_ID/${CLUSTER_ID}/g" ./conf/clusters/libraries-dev.json > ~/install_libraries.json
          cat ~/install_libraries.json
          curl -X POST --header "Authorization: Bearer $DATABRICKS_TOKEN" ${DATABRICKS_HOST}api/2.0/libraries/install --data @~/install_libraries.json
