name: wwxf copy jobs and tests

on:
  workflow_dispatch:
    branches:
      - '**'
    tags-ignore:
      - 'v*' # this tag type is used for release pipelines

jobs:
  setup:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install pip and databricks-cli
        run: |
          python -m pip install --upgrade pip
          pip install nutter
          pip install -U databricks-cli

      - name: Prepare profile
        run: |
          echo "[DEFAULT]" >> ~/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

      - 
        name: update jobs api to version 2.1
        run: |
          databricks jobs configure --version=2.1

      - 
        name: copy notebooks
        run: |
          databricks workspace mkdirs "/wwxf"
          databricks workspace import_dir -o -e ./notebooks /wwxf/notebooks --profile DEFAULT

      - 
        name: copy tests
        run: |
          databricks workspace mkdirs "/wwxf"
          databricks workspace import_dir -o -e ./tests /wwxf/tests --profile DEFAULT

      - 
        name: run tests
        run: |
          CLUSTER_ID = $(databricks clusters list --output JSON | jq -r '( .clusters[] | select(.default_tags.ClusterName=="rocinante") .cluster_id )')
          nutter run "/wwxf/tests" --cluster_id $(CLUSTER_ID) --recursive --timeout 500
      - 
        name: create jobs
        run: |
          databricks jobs create --json-file ./conf/jobs/baby_names/get_baby_names.json
